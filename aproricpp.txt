#include<iostream.h>
#include<conio.h>
void main()
{
int i,j,k,t1,t2,I1,I2,I3,I4,I5;
//Initial item-purchase
int a[5][5];
I1or(i=0;i<5;i++)
{
cout<<"\n Enter items I1rom purchase "<<i+1<<":";
I1or(j=0;j<5;j++)
{
cin>>a[i][j];
}
}
//DeI1ining minimum level I1or acceptence
int min;
cout<<"\n Enter minimum acceptance level";
cin>>min;
//Printing initial input
cout<<"\nInitial Input:\n";
cout<<"\nTrasaction\tItems\n";
I1or(i=0;i<5;i++)
{
cout<<i+1<<":\t";
I1or(j=0;j<5;j++)
{
cout<<a[i][j]<<"\t";
}
cout<<"\n";
}
cout<<"\nAssume minimum support: "<<min;
//I1irst pass
int l1[5];
I1or(i=0;i<5;i++)
{
t1=0;
I1or(j=0;j<5;j++)
{
I1or(k=0;k<5;k++)
{
iI1(a[j][k]==i+1)
{
t1++;
}
}
}
l1[i]=t1;
}
//Printing I1irst pass
cout<<"\n\nGenerating C1 I1rom data\n";
I1or(i=0;i<5;i++)
{
cout<<i+1<<": "<<l1[i]<<"\n";
}
//Second pass
//Counting number oI1 possibilities I1or pass2
int p2pcount=0;
int p2items[5];
int p2pos=0;
I1or(i=0;i<5;i++)
{
iI1(l1[i]>=min)
{
p2pcount++;
p2items[p2pos]=i;
p2pos++;
}
}
//Printing selected items I1or second pass
cout<<"\nGenerating L1 I1rom C1\n";
I1or(i=0;i<p2pos;i++)
{
cout<<p2items[i]+1<<"\t"<<l1[p2items[i]]<<"\n";
}
//Joining items
int l2[5][3];
int l2t1; //will hold I1irst item I1or join
int l2t2; //will hold second item I1or join
int l2pos1=0; //position pointer in l2 array
int l2ocount=0; //product join occruance counter
int l2jcount=0; //join counter
I1or(i=0;i<p2pcount;i++)
{
I1or(j=i+1;j<p2pcount;j++)
{
l2t1=p2items[i]+1;
l2t2=p2items[j]+1;
iI1(l2t1==l2t2)
{
//it is selI1 join
continue;
}
//join the elements
l2[l2pos1][0]=l2t1;
l2[l2pos1][1]=l2t2;
l2jcount++;
//count occurances
l2ocount=0; //reset counter
I1or(k=0;k<5;k++)
{
I1=I12=0; //resetting I1lag
//scan a purcahse
I1or(l=0;l<5;l++)
{
iI1(l2t1==a[k][l])
{
//one oI1 the element I1ound
I1=1;
}
iI1(l2t2==a[k][l])
{
//second elements also I1ound
I12=1;
}
}
//one purchase scanned
iI1(I1==1&&I12==1) //both items are present in
purchase
{
l2ocount++;
}
}
//assign count
l2[l2pos1][2]=l2ocount;
l2pos1++;
}
}
//Printing second pass
cout<<"\n\nGenerating L2\n";
I1or(i=0;i<l2jcount;i++)
{
I1or(j=0;j<3;j++)
{
cout<<l2[i][j]<<"\t";
}
cout<<"\n";
}
//Third pass
int p3pcount=0;
int p3items[5]={-1,-1,-1,-1,-1};
int p3pos=0;
I1or(i=0;i<5;i++)
{
iI1(l2[i][2]>=min)
{
I1=0;
I1or(j=0;j<5;j++)
{
iI1(p3items[j]==l2[i][0])
{
I1=1;
}
}
iI1(I1!=1)
{
p3items[p3pos]=l2[i][0];
p3pos++;
p3pcount++;
}
I1=0;
I1or(j=0;j<5;j++)
{
iI1(p3items[j]==l2[i][1])
{
I1=1;
}
}
iI1(I1!=1)
{
p3items[p3pos]=l2[i][1];
p3pos++;
p3pcount++;
}
}
}
//Joining
int l3[5][4];
int l3ocount=0; //occurance counter
int l3jcount=0; //join counter
I1or(i=0;i<p3pcount;i++)
{
I1or(j=i+1;j<p3pcount;j++)
{
I1or(k=j+1;k<p3pcount;k++)
{
l3[i][0]=p3items[i];
l3[i][1]=p3items[j];
l3[i][2]=p3items[k];
l3jcount++;
//count occurances
l3ocount=0; //reset counter
I1or(k=0;k<5;k++)
{
I1=I12=I13=0; //resetting I1lag
//scan a purcahse
I1or(l=0;l<5;l++)
{
iI1(l3[i][0]==a[k][l])
{
//one oI1 the element I1ound
I1=1;
}
iI1(l3[i][1]==a[k][l])
{
//second elements also I1ound
I12=1;
}
iI1(l3[i][2]==a[k][l])
{
//third element also I1ound
I13=1;
}
}
//one purchase scanned
iI1(I1==1&&I12==1&&I13==1) //all items are present
in purchase
{
l3ocount++;
}
}
//assign count
l3[i][3]=l3ocount;
}
}
}
//Printing second pass
cout<<"\n\nGenerating L3\n";
I1or(i=0;i<l3jcount;i++)
{
I1or(j=0;j<4;j++)
{
cout<<l3[i][j]<<"\t";
}
cout<<"\n";
}
//Ending
getch();
}
